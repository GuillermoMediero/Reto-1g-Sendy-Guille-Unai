import java.awt.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.Random;
import javax.swing.RowSorter.SortKey;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rober
 */
public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    
    public principal() {
        initComponents();
        model=(DefaultTableModel)jTable1.getModel();
        model_j=(DefaultTableModel)jTable2.getModel();
        model_t=(DefaultTableModel)jTable3.getModel();
    }
    DefaultTableModel model;
    DefaultTableModel model_j;
    DefaultTableModel model_t;
    TableRowSorter<DefaultTableModel> ordenar1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A"},
                {"B"},
                {"C"},
                {"D"}
            },
            new String [] {
                "Equipos"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Jor", "Equipo 1", "G1", "Vr", "Equipo 2", "G2"
            }
        ));
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(20);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(25);
            jTable2.getColumnModel().getColumn(2).setMinWidth(20);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(25);
            jTable2.getColumnModel().getColumn(3).setMinWidth(25);
            jTable2.getColumnModel().getColumn(3).setMaxWidth(35);
            jTable2.getColumnModel().getColumn(5).setMinWidth(20);
            jTable2.getColumnModel().getColumn(5).setMaxWidth(25);
        }

        jButton3.setText("Generar  Calendario");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Generar Resultado");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipo", "JJ", "G", "E", "P", "Pts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(1).setMinWidth(30);
            jTable3.getColumnModel().getColumn(1).setMaxWidth(40);
            jTable3.getColumnModel().getColumn(2).setMinWidth(30);
            jTable3.getColumnModel().getColumn(2).setMaxWidth(40);
            jTable3.getColumnModel().getColumn(3).setMinWidth(30);
            jTable3.getColumnModel().getColumn(3).setMaxWidth(40);
            jTable3.getColumnModel().getColumn(4).setMinWidth(30);
            jTable3.getColumnModel().getColumn(4).setMaxWidth(40);
            jTable3.getColumnModel().getColumn(5).setMinWidth(35);
            jTable3.getColumnModel().getColumn(5).setMaxWidth(45);
        }

        jButton5.setText("Actualizar Tabla");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addGap(30, 30, 30)
                                .addComponent(jButton5))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(61, 61, 61)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        model.addRow(new Object[]{this.jTextField1.getText().toString()});
        this.jTextField1.setText("");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int pos=this.jTable1.getSelectedRow();
        model.removeRow(pos);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        model_j.setRowCount(0);
        
        String e1,e2;
        int pos2=0;
        int pos1=0;
        // en caso de cantidad de equipo impar
        if(this.jTable1.getRowCount()%2==1){
            model.addRow(new Object[]{"Libre"});
        }
        
        //crear calendario
        for(int i=1;i<this.jTable1.getRowCount();i++){
            pos2=this.jTable1.getRowCount()-i;
            pos1=pos2-1;
            
            for(int s=0;s<this.jTable1.getRowCount()/2;s++){
                                               
                if(s==0){
                    e1=this.jTable1.getValueAt(0, 0).toString();
                    e2=this.jTable1.getValueAt((pos2%this.jTable1.getRowCount()), 0).toString();
                    model_j.addRow(new Object[]{i,e1,0,"Vr",e2 ,0});
                    pos2++;
                }
                else{
                    if(pos1%this.jTable1.getRowCount()==0)
                        pos1=this.jTable1.getRowCount()-1;
                    
                    e1=this.jTable1.getValueAt((pos1)%this.jTable1.getRowCount(),0).toString();
                    
                    pos1--;
                    
                    if(pos2%this.jTable1.getRowCount()==0)
                        pos2=this.jTable1.getRowCount()+1;
                    
                    e2=this.jTable1.getValueAt((pos2)%this.jTable1.getRowCount(),0).toString();
                    
                    pos2++;
                    
                    model_j.addRow(new Object[]{i,e1,0,"vr",e2,0});
                    
                }
                
            }
                    
           
            
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Random r=new Random();
        for(int i=0;i<this.jTable2.getRowCount();i++){
            if(!this.jTable2.getValueAt(i, 1).equals("Libre") && !this.jTable2.getValueAt(i, 4).equals("Libre")  ){
                model_j.setValueAt(r.nextInt(5), i, 2);
                model_j.setValueAt(r.nextInt(5), i, 5);
            }
            else
            {
                model_j.setValueAt("-", i, 2);
                model_j.setValueAt("-", i, 5);
            }
                
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    int dir;
    boolean existe(String equipo){
        dir=-1;
        for(int i=0;i<this.jTable3.getRowCount();i++){
           if(this.model_t.getValueAt(i, 0).equals(equipo)) {
               dir=i;
               return true;
           }
        }
        return false;
    }
    
    void agregar(String e, String le){
        int jj,jg,je,jp,pt;
        
       
        if(existe(e)){
            
            jj=Integer.valueOf(model_t.getValueAt(dir, 1).toString())+1;
            
            jg=Integer.valueOf(model_t.getValueAt(dir, 2).toString());
            je=Integer.valueOf(model_t.getValueAt(dir, 3).toString());
            jp=Integer.valueOf(model_t.getValueAt(dir, 4).toString());
           
            pt=Integer.valueOf(model_t.getValueAt(dir, 5).toString());
           
            switch(le){
                
                case "G":
                    jg++;
                    model_t.setValueAt(jg, dir, 2);
                    break;
                case "E":
                    je++;
                    model_t.setValueAt(je, dir, 3);
                    break;
                 case "P":
                    jp++;
                   
                    model_t.setValueAt(jp, dir, 4);
                    break;
                 default:
                     System.out.println("Error "+ e+" "+ le);
            }
           
            pt=(jg*3)+je;
           
            model_t.setValueAt(pt, dir, 5);
            model_t.setValueAt(jj, dir, 1);
                                   
        }
        else{
                       
             switch(le){
                
                case "G":
                       model_t.addRow(new Object[]{e,1,1,0,0,3});
                    break;
                case "E":
                    model_t.addRow(new Object[]{e,1,0,1,0,1});
                    break;
                 case "P":
                   model_t.addRow(new Object[]{e,1,0,0,1,0});
                    break;
                default:
                     System.out.println("Error "+ e+" "+ le);
            }
        }                               
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        model_t.setRowCount(0);
        int ge1,ge2;
        
        for(int i=0;i<this.jTable2.getRowCount();i++){
             if(!this.jTable2.getValueAt(i, 1).equals("Libre") && !this.jTable2.getValueAt(i, 4).equals("Libre")  ){
                 ge1=Integer.valueOf(this.jTable2.getValueAt(i,2).toString());
                 ge2=Integer.valueOf(this.jTable2.getValueAt(i,5).toString());
                 
                 if(ge1==ge2){
                   
                     agregar(this.jTable2.getValueAt(i,1).toString(),"E");
                     agregar(this.jTable2.getValueAt(i,4).toString(),"E");
                 }
                 else if(ge1>ge2){
                    
                     agregar(this.jTable2.getValueAt(i,1).toString(),"G");
                     agregar(this.jTable2.getValueAt(i,4).toString(),"P");
                 }
                 else if(ge1<ge2){
                 
                    
                     agregar(this.jTable2.getValueAt(i,1).toString(),"P");
                     agregar(this.jTable2.getValueAt(i,4).toString(),"G");
                 }
                 else{
                         System.out.println("error");
                         }
             }
            
        }
         
       this.jTable3.getRowSorter().allRowsChanged();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        ordenar1=new TableRowSorter<DefaultTableModel>(model_t);                 
        this.jTable3.setRowSorter(ordenar1);
                            
        this.jTable3.getRowSorter().toggleSortOrder(5);
        this.jTable3.getRowSorter().toggleSortOrder(5);
       
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
